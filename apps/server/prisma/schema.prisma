generator client {
  provider = "prisma-client-js"
}

generator trpc {
  provider       = "prisma-trpc-generator"
  output         = "../src/server/trpc-generate"
  contextPath    = "../../../trpc/context"
  withMiddleware = "false"
  withShield     = "false"
}

datasource db {
  provider = "postgres"
  url      = "postgres://postgres:yVJ4rSg8m9QrbYrC@awimzpghgnkuhcslexog.db.ap-southeast-1.nhost.run:5432/awimzpghgnkuhcslexog"
}

model address {
  id                                            String        @id(map: "PK_d92de1f82754668b5f5f5dd4fd5") @db.VarChar
  customer_id                                   String?       @db.VarChar
  company                                       String?       @db.VarChar
  first_name                                    String?       @db.VarChar
  last_name                                     String?       @db.VarChar
  address_1                                     String?       @db.VarChar
  address_2                                     String?       @db.VarChar
  city                                          String?       @db.VarChar
  country_code                                  String?       @db.VarChar
  province                                      String?       @db.VarChar
  postal_code                                   String?       @db.VarChar
  phone                                         String?       @db.VarChar
  created_at                                    DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime      @default(now()) @db.Timestamptz(6)
  deleted_at                                    DateTime?     @db.Timestamptz(6)
  metadata                                      Json?
  country                                       country?      @relation(fields: [country_code], references: [iso_2], onDelete: NoAction, onUpdate: NoAction, map: "FK_6df8c6bf969a51d24c1980c4ff4")
  customer_address_customer_idTocustomer        customer?     @relation("address_customer_idTocustomer", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9c9614b2f9d01665800ea8dbff7")
  cart_addressTocart_billing_address_id         cart[]        @relation("addressTocart_billing_address_id")
  cart_addressTocart_shipping_address_id        cart[]        @relation("addressTocart_shipping_address_id")
  claim_order                                   claim_order[]
  customer_addressTocustomer_billing_address_id customer?     @relation("addressTocustomer_billing_address_id")
  order_addressToorder_shipping_address_id      order[]       @relation("addressToorder_shipping_address_id")
  order_addressToorder_billing_address_id       order[]       @relation("addressToorder_billing_address_id")
  swap                                          swap[]

  @@index([customer_id], map: "IDX_9c9614b2f9d01665800ea8dbff")
}

model analytics_config {
  id         String    @id(map: "PK_93505647c5d7cb479becb810b0f") @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  user_id    String    @db.VarChar
  opt_out    Boolean   @default(false)
  anonymize  Boolean   @default(false)
}

model batch_job {
  id               String    @id(map: "PK_e57f84d485145d5be96bc6d871e") @db.VarChar
  type             String
  created_by       String?   @db.VarChar
  context          Json?
  result           Json?
  dry_run          Boolean   @default(false)
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  pre_processed_at DateTime? @db.Timestamptz(6)
  confirmed_at     DateTime? @db.Timestamptz(6)
  processing_at    DateTime? @db.Timestamptz(6)
  completed_at     DateTime? @db.Timestamptz(6)
  failed_at        DateTime? @db.Timestamptz(6)
  canceled_at      DateTime? @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at       DateTime? @db.Timestamptz(6)
  user             user?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fa53ca4f5fd90605b532802a626")
}

model cart {
  id                                        String                   @id(map: "PK_c524ec48751b9b5bcfbf6e59be7") @db.VarChar
  email                                     String?                  @db.VarChar
  billing_address_id                        String?                  @db.VarChar
  shipping_address_id                       String?                  @db.VarChar
  region_id                                 String                   @db.VarChar
  customer_id                               String?                  @db.VarChar
  payment_id                                String?                  @unique(map: "REL_9d1a161434c610aae7c3df2dc7") @db.VarChar
  type                                      cart_type_enum           @default(default)
  completed_at                              DateTime?                @db.Timestamptz(6)
  created_at                                DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime                 @default(now()) @db.Timestamptz(6)
  deleted_at                                DateTime?                @db.Timestamptz(6)
  metadata                                  Json?
  idempotency_key                           String?                  @db.VarChar
  context                                   Json?
  payment_authorized_at                     DateTime?                @db.Timestamptz(6)
  customer                                  customer?                @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_242205c81c1152fab1b6e848470")
  region                                    region                   @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_484c329f4783be4e18e5e2ff090")
  address_addressTocart_billing_address_id  address?                 @relation("addressTocart_billing_address_id", fields: [billing_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6b9c66b5e36f7c827dfaa092f94")
  payment_cart_payment_idTopayment          payment?                 @relation("cart_payment_idTopayment", fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9d1a161434c610aae7c3df2dc7e")
  address_addressTocart_shipping_address_id address?                 @relation("addressTocart_shipping_address_id", fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ced15a9a695d2b5db9dabce763d")
  cart_discounts                            cart_discounts[]
  cart_gift_cards                           cart_gift_cards[]
  custom_shipping_option                    custom_shipping_option[]
  draft_order                               draft_order?
  line_item                                 line_item[]
  order                                     order?
  payment_cartTopayment_cart_id             payment[]                @relation("cartTopayment_cart_id")
  payment_session                           payment_session[]
  shipping_method                           shipping_method[]
  swap                                      swap?

  @@index([customer_id], map: "IDX_242205c81c1152fab1b6e84847")
  @@index([region_id], map: "IDX_484c329f4783be4e18e5e2ff09")
  @@index([billing_address_id], map: "IDX_6b9c66b5e36f7c827dfaa092f9")
  @@index([payment_id], map: "IDX_9d1a161434c610aae7c3df2dc7")
  @@index([shipping_address_id], map: "IDX_ced15a9a695d2b5db9dabce763")
}

model cart_discounts {
  cart_id     String   @db.VarChar
  discount_id String   @db.VarChar
  cart        cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6680319ebe1f46d18f106191d59")
  discount    discount @relation(fields: [discount_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8df75ef4f35f217768dc1135458")

  @@id([cart_id, discount_id], map: "PK_10bd412c9071ccc0cf555afd9bb")
  @@index([cart_id], map: "IDX_6680319ebe1f46d18f106191d5")
  @@index([discount_id], map: "IDX_8df75ef4f35f217768dc113545")
}

model cart_gift_cards {
  cart_id      String    @db.VarChar
  gift_card_id String    @db.VarChar
  gift_card    gift_card @relation(fields: [gift_card_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0fb38b6d167793192bc126d835e")
  cart         cart      @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d38047a90f3d42f0be7909e8aea")

  @@id([cart_id, gift_card_id], map: "PK_2389be82bf0ef3635e2014c9ef1")
  @@index([gift_card_id], map: "IDX_0fb38b6d167793192bc126d835")
  @@index([cart_id], map: "IDX_d38047a90f3d42f0be7909e8ae")
}

model claim_image {
  id            String     @id(map: "PK_7c49e44bfe8840ca7d917890101") @db.VarChar
  claim_item_id String     @db.VarChar
  url           String     @db.VarChar
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?  @db.Timestamptz(6)
  metadata      Json?
  claim_item    claim_item @relation(fields: [claim_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_21cbfedd83d736d86f4c6f4ce56")

  @@index([claim_item_id], map: "IDX_21cbfedd83d736d86f4c6f4ce5")
}

model claim_item {
  id              String                 @id(map: "PK_5679662039bc4c7c6bc7fa1be2d") @db.VarChar
  claim_order_id  String                 @db.VarChar
  item_id         String                 @db.VarChar
  variant_id      String                 @db.VarChar
  reason          claim_item_reason_enum
  note            String?                @db.VarChar
  quantity        Int
  created_at      DateTime               @default(now()) @db.Timestamptz(6)
  updated_at      DateTime               @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?              @db.Timestamptz(6)
  metadata        Json?
  product_variant product_variant        @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_64980511ca32c8e92b417644afa")
  line_item       line_item              @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6e0cad0daef76bb642675910b9d")
  claim_order     claim_order            @relation(fields: [claim_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_900a9c3834257304396b2b0fe7c")
  claim_image     claim_image[]
  claim_item_tags claim_item_tags[]

  @@index([variant_id], map: "IDX_64980511ca32c8e92b417644af")
  @@index([item_id], map: "IDX_6e0cad0daef76bb642675910b9")
  @@index([claim_order_id], map: "IDX_900a9c3834257304396b2b0fe7")
}

model claim_item_tags {
  item_id    String     @db.VarChar
  tag_id     String     @db.VarChar
  claim_item claim_item @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c2c0f3edf39515bd15432afe6e5")
  claim_tag  claim_tag  @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_dc9bbf9fcb9ba458d25d512811b")

  @@id([item_id, tag_id], map: "PK_54ab8ce0f7e99167068188fbd81")
  @@index([item_id], map: "IDX_c2c0f3edf39515bd15432afe6e")
  @@index([tag_id], map: "IDX_dc9bbf9fcb9ba458d25d512811")
}

model claim_order {
  id                  String                              @id(map: "PK_8981f5595a4424021466aa4c7a4") @db.VarChar
  payment_status      claim_order_payment_status_enum     @default(na)
  fulfillment_status  claim_order_fulfillment_status_enum @default(not_fulfilled)
  type                claim_order_type_enum
  order_id            String                              @db.VarChar
  shipping_address_id String?                             @db.VarChar
  refund_amount       Int?
  canceled_at         DateTime?                           @db.Timestamptz(6)
  created_at          DateTime                            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime                            @default(now()) @db.Timestamptz(6)
  deleted_at          DateTime?                           @db.Timestamptz(6)
  metadata            Json?
  idempotency_key     String?                             @db.VarChar
  no_notification     Boolean?
  address             address?                            @relation(fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_017d58bf8260c6e1a2588d258e2")
  order               order                               @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f49e3974465d3c3a33d449d3f31")
  claim_item          claim_item[]
  fulfillment         fulfillment[]
  line_item           line_item[]
  return              Renamedreturn?                      @relation("claim_orderToreturn")
  shipping_method     shipping_method[]

  @@index([shipping_address_id], map: "IDX_017d58bf8260c6e1a2588d258e")
  @@index([order_id], map: "IDX_f49e3974465d3c3a33d449d3f3")
}

model claim_tag {
  id              String            @id(map: "PK_7761180541142a5926501018d34") @db.VarChar
  value           String            @db.VarChar
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?         @db.Timestamptz(6)
  metadata        Json?
  claim_item_tags claim_item_tags[]

  @@index([value], map: "IDX_ec10c54769877840c132260e4a")
}

model country {
  id           Int       @id(map: "PK_bf6e37c231c4f4ea56dcd887269") @default(autoincrement())
  iso_2        String    @unique(map: "IDX_e78901b1131eaf8203d9b1cb5f") @db.VarChar
  iso_3        String    @db.VarChar
  num_code     Int
  name         String    @db.VarChar
  display_name String    @db.VarChar
  region_id    String?   @db.VarChar
  region       region?   @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b1aac8314662fa6b25569a575bb")
  address      address[]

  @@index([region_id], map: "IDX_b1aac8314662fa6b25569a575b")
}

model currency {
  code             String             @id(map: "PK_723472e41cae44beb0763f4039c") @db.VarChar
  symbol           String             @db.VarChar
  symbol_native    String             @db.VarChar
  name             String             @db.VarChar
  money_amount     money_amount[]
  order            order[]
  payment          payment[]
  region           region[]
  store            store[]
  store_currencies store_currencies[]
}

model custom_shipping_option {
  id                 String          @id(map: "PK_8dfcb5c1172c29eec4a728420cc") @db.VarChar
  price              Int
  shipping_option_id String          @db.VarChar
  cart_id            String?         @db.VarChar
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?       @db.Timestamptz(6)
  metadata           Json?
  shipping_option    shipping_option @relation(fields: [shipping_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_44090cb11b06174cbcc667e91ca")
  cart               cart?           @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_93caeb1bb70d37c1d36d6701a7a")

  @@unique([shipping_option_id, cart_id], map: "UQ_0f838b122a9a01d921aa1cdb669")
  @@index([shipping_option_id], map: "IDX_44090cb11b06174cbcc667e91c")
  @@index([cart_id], map: "IDX_93caeb1bb70d37c1d36d6701a7")
}

model customer {
  id                                           String                     @id(map: "PK_a7a13f4cacb744524e44dfdad32") @db.VarChar
  email                                        String                     @unique(map: "IDX_fdb2f3ad8115da4c7718109a6e") @db.VarChar
  first_name                                   String?                    @db.VarChar
  last_name                                    String?                    @db.VarChar
  billing_address_id                           String?                    @unique(map: "REL_8abe81b9aac151ae60bf507ad1") @db.VarChar
  password_hash                                String?                    @db.VarChar
  phone                                        String?                    @db.VarChar
  has_account                                  Boolean                    @default(false)
  created_at                                   DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at                                   DateTime?                  @db.Timestamptz(6)
  metadata                                     Json?
  address_addressTocustomer_billing_address_id address?                   @relation("addressTocustomer_billing_address_id", fields: [billing_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8abe81b9aac151ae60bf507ad15")
  address_address_customer_idTocustomer        address[]                  @relation("address_customer_idTocustomer")
  cart                                         cart[]
  customer_group_customers                     customer_group_customers[]
  notification                                 notification[]
  order                                        order[]

  @@index([billing_address_id], map: "IDX_8abe81b9aac151ae60bf507ad1")
}

model customer_group {
  id                                String                              @id(map: "PK_88e7da3ff7262d9e0a35aa3664e") @db.VarChar
  name                              String                              @db.VarChar
  created_at                        DateTime                            @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime                            @default(now()) @db.Timestamptz(6)
  deleted_at                        DateTime?                           @db.Timestamptz(6)
  metadata                          Json?
  customer_group_customers          customer_group_customers[]
  discount_condition_customer_group discount_condition_customer_group[]
  price_list_customer_groups        price_list_customer_groups[]
}

model customer_group_customers {
  customer_group_id String         @db.VarChar
  customer_id       String         @db.VarChar
  customer          customer       @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3c6412d076292f439269abe1a23")
  customer_group    customer_group @relation(fields: [customer_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_620330964db8d2999e67b0dbe3e")

  @@id([customer_group_id, customer_id], map: "PK_e28a55e34ad1e2d3df9a0ac86d3")
  @@index([customer_id], map: "IDX_3c6412d076292f439269abe1a2")
  @@index([customer_group_id], map: "IDX_620330964db8d2999e67b0dbe3")
}

model discount {
  id                   String                 @id(map: "PK_d05d8712e429673e459e7f1cddb") @db.VarChar
  code                 String                 @db.VarChar
  is_dynamic           Boolean
  rule_id              String?                @db.VarChar
  is_disabled          Boolean
  parent_discount_id   String?                @db.VarChar
  starts_at            DateTime               @default(now()) @db.Timestamptz(6)
  ends_at              DateTime?              @db.Timestamptz(6)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  metadata             Json?
  usage_limit          Int?
  usage_count          Int                    @default(0)
  valid_duration       String?                @db.VarChar
  discount             discount?              @relation("discountTodiscount", fields: [parent_discount_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2250c5d9e975987ab212f61a663")
  discount_rule        discount_rule?         @relation(fields: [rule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ac2c280de3701b2d66f6817f760")
  cart_discounts       cart_discounts[]
  other_discount       discount[]             @relation("discountTodiscount")
  discount_regions     discount_regions[]
  line_item_adjustment line_item_adjustment[]
  order_discounts      order_discounts[]

  @@index([rule_id], map: "IDX_ac2c280de3701b2d66f6817f76")
}

model discount_condition {
  id                                    String                                  @id(map: "PK_e6b81d83133ddc21a2baf2e2204") @db.VarChar
  type                                  discount_condition_type_enum
  operator                              discount_condition_operator_enum
  discount_rule_id                      String                                  @db.VarChar
  created_at                            DateTime                                @default(now()) @db.Timestamptz(6)
  updated_at                            DateTime                                @default(now()) @db.Timestamptz(6)
  deleted_at                            DateTime?                               @db.Timestamptz(6)
  metadata                              Json?
  discount_rule                         discount_rule                           @relation(fields: [discount_rule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_efff700651718e452ca9580a624")
  discount_condition_customer_group     discount_condition_customer_group[]
  discount_condition_product            discount_condition_product[]
  discount_condition_product_collection discount_condition_product_collection[]
  discount_condition_product_tag        discount_condition_product_tag[]
  discount_condition_product_type       discount_condition_product_type[]

  @@unique([type, operator, discount_rule_id], map: "dctypeuniq")
  @@index([discount_rule_id], map: "IDX_efff700651718e452ca9580a62")
}

model discount_condition_customer_group {
  customer_group_id  String             @db.VarChar
  condition_id       String             @db.VarChar
  created_at         DateTime           @default(now()) @db.Timestamptz(6)
  updated_at         DateTime           @default(now()) @db.Timestamptz(6)
  metadata           Json?
  customer_group     customer_group     @relation(fields: [customer_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4d5f98645a67545d8dea42e2eb8")
  discount_condition discount_condition @relation(fields: [condition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8486ee16e69013c645d0b8716b6")

  @@id([customer_group_id, condition_id], map: "PK_cdc8b2277169a16b8b7d4c73e0e")
  @@index([customer_group_id], map: "IDX_4d5f98645a67545d8dea42e2eb")
  @@index([condition_id], map: "IDX_8486ee16e69013c645d0b8716b")
}

model discount_condition_product {
  product_id         String             @db.VarChar
  condition_id       String             @db.VarChar
  created_at         DateTime           @default(now()) @db.Timestamptz(6)
  updated_at         DateTime           @default(now()) @db.Timestamptz(6)
  metadata           Json?
  product            product            @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c759f53b2e48e8cfb50638fe4e0")
  discount_condition discount_condition @relation(fields: [condition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f05132301e95bdab4ba1cf29a24")

  @@id([product_id, condition_id], map: "PK_994eb4529fdbf14450d64ec17e8")
  @@index([product_id], map: "IDX_c759f53b2e48e8cfb50638fe4e")
  @@index([condition_id], map: "IDX_f05132301e95bdab4ba1cf29a2")
}

model discount_condition_product_collection {
  product_collection_id String             @db.VarChar
  condition_id          String             @db.VarChar
  created_at            DateTime           @default(now()) @db.Timestamptz(6)
  updated_at            DateTime           @default(now()) @db.Timestamptz(6)
  metadata              Json?
  product_collection    product_collection @relation(fields: [product_collection_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a0b05dc4257abe639cb75f8eae2")
  discount_condition    discount_condition @relation(fields: [condition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a1c4f9cfb599ad1f0db39cadd5f")

  @@id([product_collection_id, condition_id], map: "PK_b3508fc787aa4a38705866cbb6d")
  @@index([product_collection_id], map: "IDX_a0b05dc4257abe639cb75f8eae")
  @@index([condition_id], map: "IDX_a1c4f9cfb599ad1f0db39cadd5")
}

model discount_condition_product_tag {
  product_tag_id     String             @db.VarChar
  condition_id       String             @db.VarChar
  created_at         DateTime           @default(now()) @db.Timestamptz(6)
  updated_at         DateTime           @default(now()) @db.Timestamptz(6)
  metadata           Json?
  product_tag        product_tag        @relation(fields: [product_tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_01486cc9dc6b36bf658685535f6")
  discount_condition discount_condition @relation(fields: [condition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fbb2499551ed074526f3ee36241")

  @@id([product_tag_id, condition_id], map: "PK_a95382c1e62205b121aa058682b")
  @@index([product_tag_id], map: "IDX_01486cc9dc6b36bf658685535f")
  @@index([condition_id], map: "IDX_fbb2499551ed074526f3ee3624")
}

model discount_condition_product_type {
  product_type_id    String             @db.VarChar
  condition_id       String             @db.VarChar
  created_at         DateTime           @default(now()) @db.Timestamptz(6)
  updated_at         DateTime           @default(now()) @db.Timestamptz(6)
  metadata           Json?
  discount_condition discount_condition @relation(fields: [condition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6ef23ce0b1d9cf9b5b833e52b9d")
  product_type       product_type       @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e706deb68f52ab2756119b9e704")

  @@id([product_type_id, condition_id], map: "PK_35d538a5a24399d0df978df12ed")
  @@index([condition_id], map: "IDX_6ef23ce0b1d9cf9b5b833e52b9")
  @@index([product_type_id], map: "IDX_e706deb68f52ab2756119b9e70")
}

model discount_regions {
  discount_id String   @db.VarChar
  region_id   String   @db.VarChar
  region      region   @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a21a7ffbe420d492eb46c305fec")
  discount    discount @relation(fields: [discount_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f4194aa81073f3fab8aa86906ff")

  @@id([discount_id, region_id], map: "PK_15974566a8b6e04a7c754e85b75")
  @@index([region_id], map: "IDX_a21a7ffbe420d492eb46c305fe")
  @@index([discount_id], map: "IDX_f4194aa81073f3fab8aa86906f")
}

model discount_rule {
  id                     String                         @id(map: "PK_ac2c280de3701b2d66f6817f760") @db.VarChar
  description            String?                        @db.VarChar
  type                   discount_rule_type_enum
  value                  Int
  allocation             discount_rule_allocation_enum?
  created_at             DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                       @default(now()) @db.Timestamptz(6)
  deleted_at             DateTime?                      @db.Timestamptz(6)
  metadata               Json?
  discount               discount[]
  discount_condition     discount_condition[]
  discount_rule_products discount_rule_products[]
}

model discount_rule_products {
  discount_rule_id String        @db.VarChar
  product_id       String        @db.VarChar
  discount_rule    discount_rule @relation(fields: [discount_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4e0739e5f0244c08d41174ca08a")
  product          product       @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_be66106a673b88a81c603abe7eb")

  @@id([discount_rule_id, product_id], map: "PK_351c8c92f5d27283c445cd022ee")
  @@index([discount_rule_id], map: "IDX_4e0739e5f0244c08d41174ca08")
  @@index([product_id], map: "IDX_be66106a673b88a81c603abe7e")
}

model draft_order {
  id                                      String                  @id(map: "PK_f478946c183d98f8d88a94cfcd7") @db.VarChar
  status                                  draft_order_status_enum @default(open)
  display_id                              Int                     @default(autoincrement())
  cart_id                                 String?                 @unique(map: "REL_5bd11d0e2a9628128e2c26fd0a") @db.VarChar
  order_id                                String?                 @unique(map: "REL_8f6dd6c49202f1466ebf21e77d") @db.VarChar
  canceled_at                             DateTime?               @db.Timestamptz(6)
  created_at                              DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime                @default(now()) @db.Timestamptz(6)
  completed_at                            DateTime?               @db.Timestamptz(6)
  metadata                                Json?
  idempotency_key                         String?                 @db.VarChar
  no_notification_order                   Boolean?
  cart                                    cart?                   @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5bd11d0e2a9628128e2c26fd0a6")
  order_draft_order_order_idToorder       order?                  @relation("draft_order_order_idToorder", fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8f6dd6c49202f1466ebf21e77da")
  order_draft_orderToorder_draft_order_id order?                  @relation("draft_orderToorder_draft_order_id")

  @@index([cart_id], map: "IDX_5bd11d0e2a9628128e2c26fd0a")
  @@index([order_id], map: "IDX_8f6dd6c49202f1466ebf21e77d")
  @@index([display_id], map: "IDX_e87cc617a22ef4edce5601edab")
}

model fulfillment {
  id                   String                @id(map: "PK_50c102da132afffae660585981f") @db.VarChar
  swap_id              String?               @db.VarChar
  order_id             String?               @db.VarChar
  tracking_numbers     Json                  @default("[]")
  data                 Json
  shipped_at           DateTime?             @db.Timestamptz(6)
  canceled_at          DateTime?             @db.Timestamptz(6)
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  metadata             Json?
  idempotency_key      String?               @db.VarChar
  provider_id          String?               @db.VarChar
  claim_order_id       String?               @db.VarChar
  no_notification      Boolean?
  swap                 swap?                 @relation(fields: [swap_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a52e234f729db789cf473297a5c")
  fulfillment_provider fulfillment_provider? @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_beb35a6de60a6c4f91d5ae57e44")
  claim_order          claim_order?          @relation(fields: [claim_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d73e55964e0ff2db8f03807d52e")
  order                order?                @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f129acc85e346a10eed12b86fca")
  fulfillment_item     fulfillment_item[]
  tracking_link        tracking_link[]

  @@index([swap_id], map: "IDX_a52e234f729db789cf473297a5")
  @@index([provider_id], map: "IDX_beb35a6de60a6c4f91d5ae57e4")
  @@index([claim_order_id], map: "IDX_d73e55964e0ff2db8f03807d52")
  @@index([order_id], map: "IDX_f129acc85e346a10eed12b86fc")
}

model fulfillment_item {
  fulfillment_id String      @db.VarChar
  item_id        String      @db.VarChar
  quantity       Int
  fulfillment    fulfillment @relation(fields: [fulfillment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a033f83cc6bd7701a5687ab4b38")
  line_item      line_item   @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e13ff60e74206b747a1896212d1")

  @@id([fulfillment_id, item_id], map: "PK_bc3e8a388de75db146a249922e0")
}

model fulfillment_provider {
  id                           String                         @id(map: "PK_beb35a6de60a6c4f91d5ae57e44") @db.VarChar
  is_installed                 Boolean                        @default(true)
  fulfillment                  fulfillment[]
  region_fulfillment_providers region_fulfillment_providers[]
  shipping_option              shipping_option[]
}

model gift_card {
  id                    String                  @id(map: "PK_af4e338d2d41035042843ad641f") @db.VarChar
  code                  String                  @unique(map: "IDX_53cb5605fa42e82b4d47b47bda") @db.VarChar
  value                 Int
  balance               Int
  region_id             String                  @db.VarChar
  order_id              String?                 @db.VarChar
  is_disabled           Boolean                 @default(false)
  ends_at               DateTime?               @db.Timestamptz(6)
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at            DateTime?               @db.Timestamptz(6)
  metadata              Json?
  region                region                  @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b6bcf8c3903097b84e85154eed3")
  order                 order?                  @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dfc1f02bb0552e79076aa58dbb0")
  cart_gift_cards       cart_gift_cards[]
  gift_card_transaction gift_card_transaction[]
  order_gift_cards      order_gift_cards[]

  @@index([region_id], map: "IDX_b6bcf8c3903097b84e85154eed")
  @@index([order_id], map: "IDX_dfc1f02bb0552e79076aa58dbb")
}

model gift_card_transaction {
  id           String    @id(map: "PK_cfb5b4ba5447a507aef87d73fe7") @db.VarChar
  gift_card_id String    @db.VarChar
  order_id     String    @db.VarChar
  amount       Int
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  is_taxable   Boolean?
  tax_rate     Float?    @db.Real
  gift_card    gift_card @relation(fields: [gift_card_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3ff5597f1d7e02bba41541846f4")
  order        order     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d7d441b81012f87d4265fa57d24")

  @@unique([gift_card_id, order_id], map: "gcuniq")
  @@index([order_id], map: "IDX_d7d441b81012f87d4265fa57d2")
}

model idempotency_key {
  id              String    @id(map: "PK_213f125e14469be304f9ff1d452") @db.VarChar
  idempotency_key String    @unique(map: "IDX_a421bf4588d0004a9b0c0fe84f") @db.VarChar
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  locked_at       DateTime? @db.Timestamptz(6)
  request_method  String?   @db.VarChar
  request_params  Json?
  request_path    String?   @db.VarChar
  response_code   Int?
  response_body   Json?
  recovery_point  String    @default("started") @db.VarChar
}

model image {
  id             String           @id(map: "PK_d6db1ab4ee9ad9dbe86c64e4cc3") @db.VarChar
  url            String           @db.VarChar
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?        @db.Timestamptz(6)
  metadata       Json?
  product_images product_images[]
}

model invite {
  id         String            @id(map: "PK_fc9fa190e5a3c5d80604a4f63e1") @db.VarChar
  user_email String            @unique(map: "IDX_6b0ce4b4bcfd24491510bf19d1") @db.VarChar
  role       invite_role_enum? @default(member)
  accepted   Boolean           @default(false)
  created_at DateTime          @default(now()) @db.Timestamptz(6)
  updated_at DateTime          @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  metadata   Json?
  token      String            @db.VarChar
  expires_at DateTime          @default(now()) @db.Timestamptz(6)
}

model line_item {
  id                   String                 @id(map: "PK_cce6b13e67fa506d1d9618ac68b") @db.VarChar
  cart_id              String?                @db.VarChar
  order_id             String?                @db.VarChar
  swap_id              String?                @db.VarChar
  title                String                 @db.VarChar
  description          String?                @db.VarChar
  thumbnail            String?                @db.VarChar
  is_giftcard          Boolean                @default(false)
  should_merge         Boolean                @default(true)
  allow_discounts      Boolean                @default(true)
  has_shipping         Boolean?
  unit_price           Int
  variant_id           String?                @db.VarChar
  quantity             Int
  fulfilled_quantity   Int?
  returned_quantity    Int?
  shipped_quantity     Int?
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  metadata             Json?
  claim_order_id       String?                @db.VarChar
  is_return            Boolean                @default(false)
  claim_order          claim_order?           @relation(fields: [claim_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_118e3c48f09a7728f41023c94ef")
  cart                 cart?                  @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_27283ee631862266d0f1c680646")
  swap                 swap?                  @relation(fields: [swap_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3fa354d8d1233ff81097b2fcb6b")
  order                order?                 @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_43a2b24495fe1d9fc2a9c835bc7")
  product_variant      product_variant?       @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5371cbaa3be5200f373d24e3d5b")
  claim_item           claim_item[]
  fulfillment_item     fulfillment_item[]
  line_item_adjustment line_item_adjustment[]
  line_item_tax_line   line_item_tax_line[]
  return_item          return_item[]

  @@index([claim_order_id], map: "IDX_118e3c48f09a7728f41023c94e")
  @@index([cart_id], map: "IDX_27283ee631862266d0f1c68064")
  @@index([swap_id], map: "IDX_3fa354d8d1233ff81097b2fcb6")
  @@index([order_id], map: "IDX_43a2b24495fe1d9fc2a9c835bc")
  @@index([variant_id], map: "IDX_5371cbaa3be5200f373d24e3d5")
}

model line_item_adjustment {
  id          String    @id(map: "PK_2b1360103753df2dc8257c2c8c3") @db.VarChar
  item_id     String    @db.VarChar
  description String    @db.VarChar
  discount_id String?   @db.VarChar
  amount      Int
  metadata    Json?
  discount    discount? @relation(fields: [discount_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2f41b20a71f30e60471d7e3769c")
  line_item   line_item @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_be9aea2ccf3567007b6227da4d2")

  @@index([discount_id], map: "IDX_2f41b20a71f30e60471d7e3769")
  @@index([item_id], map: "IDX_be9aea2ccf3567007b6227da4d")
}

model line_item_tax_line {
  id         String    @id(map: "PK_4a0f4322fcd5ce4af85727f89a8") @db.VarChar
  rate       Float     @db.Real
  name       String    @db.VarChar
  code       String?   @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  metadata   Json?
  item_id    String    @db.VarChar
  line_item  line_item @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5077fa54b0d037e984385dfe8ad")

  @@unique([item_id, code], map: "UQ_3c2af51043ed7243e7d9775a2ad")
  @@index([item_id], map: "IDX_5077fa54b0d037e984385dfe8a")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model money_amount {
  id              String           @id(map: "PK_022e49a7e21a8dfb820f788778a") @db.VarChar
  currency_code   String           @db.VarChar
  amount          Int
  variant_id      String?          @db.VarChar
  region_id       String?          @db.VarChar
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime         @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?        @db.Timestamptz(6)
  min_quantity    Int?
  max_quantity    Int?
  price_list_id   String?          @db.VarChar
  product_variant product_variant? @relation(fields: [variant_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_17a06d728e4cfbc5bd2ddb70af0")
  region          region?          @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b433e27b7a83e6d12ab26b15b03")
  currency        currency         @relation(fields: [currency_code], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "FK_e15811f81339e4bd8c440aebe1c")
  price_list      price_list?      @relation(fields: [price_list_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f249976b079375499662eb80c40")

  @@index([variant_id], map: "IDX_17a06d728e4cfbc5bd2ddb70af")
  @@index([region_id], map: "IDX_b433e27b7a83e6d12ab26b15b0")
}

model note {
  id            String    @id(map: "PK_96d0c172a4fba276b1bbed43058") @db.VarChar
  value         String    @db.VarChar
  resource_type String    @db.VarChar
  resource_id   String    @db.VarChar
  author_id     String?   @db.VarChar
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  metadata      Json?

  @@index([resource_id], map: "IDX_3287f98befad26c3a7dab088cf")
  @@index([resource_type], map: "IDX_f74980b411cf94af523a72af7d")
}

model notification {
  id                    String                 @id(map: "PK_705b6c7cdf9b2c2ff7ac7872cb7") @db.VarChar
  event_name            String?                @db.VarChar
  resource_type         String                 @db.VarChar
  resource_id           String                 @db.VarChar
  customer_id           String?                @db.VarChar
  to                    String                 @db.VarChar
  data                  Json
  parent_id             String?                @db.VarChar
  provider_id           String?                @db.VarChar
  created_at            DateTime               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime               @default(now()) @db.Timestamptz(6)
  notification_provider notification_provider? @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0425c2423e2ce9fdfd5c23761d9")
  notification          notification?          @relation("notificationTonotification", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_371db513192c083f48ba63c33be")
  customer              customer?              @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b5df0f53a74b9d0c0a2b652c88d")
  other_notification    notification[]         @relation("notificationTonotification")

  @@index([customer_id], map: "IDX_b5df0f53a74b9d0c0a2b652c88")
  @@index([resource_type], map: "IDX_df1494d263740fcfb1d09a98fc")
  @@index([resource_id], map: "IDX_ea6a358d9ce41c16499aae55f9")
}

model notification_provider {
  id           String         @id(map: "PK_0425c2423e2ce9fdfd5c23761d9") @db.VarChar
  is_installed Boolean        @default(true)
  notification notification[]
}

model oauth {
  id               String  @id(map: "PK_a957b894e50eb16b969c0640a8d") @db.VarChar
  display_name     String  @db.VarChar
  application_name String  @unique(map: "IDX_c49c061b1a686843c5d673506f") @db.VarChar
  install_url      String? @db.VarChar
  uninstall_url    String? @db.VarChar
  data             Json?
}

model order {
  id                                            String                        @id(map: "PK_1031171c13130102495201e3e20") @db.VarChar
  status                                        order_status_enum             @default(pending)
  fulfillment_status                            order_fulfillment_status_enum @default(not_fulfilled)
  payment_status                                order_payment_status_enum     @default(not_paid)
  display_id                                    Int                           @default(autoincrement())
  cart_id                                       String?                       @unique(map: "REL_c99a206eb11ad45f6b7f04f2dc") @db.VarChar
  customer_id                                   String                        @db.VarChar
  email                                         String                        @db.VarChar
  billing_address_id                            String?                       @db.VarChar
  shipping_address_id                           String?                       @db.VarChar
  region_id                                     String                        @db.VarChar
  currency_code                                 String                        @db.VarChar
  tax_rate                                      Float?                        @db.Real
  canceled_at                                   DateTime?                     @db.Timestamptz(6)
  created_at                                    DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime                      @default(now()) @db.Timestamptz(6)
  metadata                                      Json?
  idempotency_key                               String?                       @db.VarChar
  draft_order_id                                String?                       @unique(map: "UQ_727b872f86c7378474a8fa46147") @db.VarChar
  no_notification                               Boolean?
  external_id                                   String?                       @db.VarChar
  address_addressToorder_shipping_address_id    address?                      @relation("addressToorder_shipping_address_id", fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_19b0c6293443d1b464f604c3316")
  address_addressToorder_billing_address_id     address?                      @relation("addressToorder_billing_address_id", fields: [billing_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5568d3b9ce9f7abeeb37511ecf2")
  currency                                      currency                      @relation(fields: [currency_code], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "FK_717a141f96b76d794d409f38129")
  draft_order_draft_orderToorder_draft_order_id draft_order?                  @relation("draft_orderToorder_draft_order_id", fields: [draft_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_727b872f86c7378474a8fa46147")
  cart                                          cart?                         @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c99a206eb11ad45f6b7f04f2dcc")
  customer                                      customer                      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cd7812c96209c5bdd48a6b858b0")
  region                                        region                        @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e1fcce2b18dbcdbe0a5ba9a68b8")
  claim_order                                   claim_order[]
  draft_order_draft_order_order_idToorder       draft_order?                  @relation("draft_order_order_idToorder")
  fulfillment                                   fulfillment[]
  gift_card                                     gift_card[]
  gift_card_transaction                         gift_card_transaction[]
  line_item                                     line_item[]
  order_discounts                               order_discounts[]
  order_gift_cards                              order_gift_cards[]
  payment                                       payment[]
  refund                                        refund[]
  return                                        Renamedreturn[]               @relation("orderToreturn")
  shipping_method                               shipping_method[]
  swap                                          swap[]

  @@index([shipping_address_id], map: "IDX_19b0c6293443d1b464f604c331")
  @@index([billing_address_id], map: "IDX_5568d3b9ce9f7abeeb37511ecf")
  @@index([display_id], map: "IDX_579e01fb94f4f58db480857e05")
  @@index([cart_id], map: "IDX_c99a206eb11ad45f6b7f04f2dc")
  @@index([customer_id], map: "IDX_cd7812c96209c5bdd48a6b858b")
  @@index([region_id], map: "IDX_e1fcce2b18dbcdbe0a5ba9a68b")
}

model order_discounts {
  order_id    String   @db.VarChar
  discount_id String   @db.VarChar
  discount    discount @relation(fields: [discount_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0fc1ec4e3db9001ad60c19daf16")
  order       order    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e7b488cebe333f449398769b2cc")

  @@id([order_id, discount_id], map: "PK_a7418714ffceebc125bf6d8fcfe")
  @@index([discount_id], map: "IDX_0fc1ec4e3db9001ad60c19daf1")
  @@index([order_id], map: "IDX_e7b488cebe333f449398769b2c")
}

model order_gift_cards {
  order_id     String    @db.VarChar
  gift_card_id String    @db.VarChar
  order        order     @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e62ff11e4730bb3adfead979ee2")
  gift_card    gift_card @relation(fields: [gift_card_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f2bb9f71e95b315eb24b2b84cb3")

  @@id([order_id, gift_card_id], map: "PK_49a8ec66a6625d7c2e3526e05b4")
  @@index([order_id], map: "IDX_e62ff11e4730bb3adfead979ee")
  @@index([gift_card_id], map: "IDX_f2bb9f71e95b315eb24b2b84cb")
}

model payment {
  id                            String    @id(map: "PK_fcaec7df5adf9cac408c686b2ab") @db.VarChar
  swap_id                       String?   @unique(map: "REL_c17aff091441b7c25ec3d68d36") @db.VarChar
  cart_id                       String?   @db.VarChar
  order_id                      String?   @db.VarChar
  amount                        Int
  currency_code                 String    @db.VarChar
  amount_refunded               Int       @default(0)
  provider_id                   String    @db.VarChar
  data                          Json
  captured_at                   DateTime? @db.Timestamptz(6)
  canceled_at                   DateTime? @db.Timestamptz(6)
  created_at                    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime  @default(now()) @db.Timestamptz(6)
  metadata                      Json?
  idempotency_key               String?   @db.VarChar
  cart_cartTopayment_cart_id    cart?     @relation("cartTopayment_cart_id", fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4665f17abc1e81dd58330e58542")
  swap                          swap?     @relation(fields: [swap_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c17aff091441b7c25ec3d68d36c")
  currency                      currency  @relation(fields: [currency_code], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "FK_f41553459a4b1491c9893ebc921")
  order                         order?    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f5221735ace059250daac9d9803")
  cart_cart_payment_idTopayment cart?     @relation("cart_payment_idTopayment")

  @@index([cart_id], map: "IDX_4665f17abc1e81dd58330e5854")
  @@index([swap_id], map: "IDX_c17aff091441b7c25ec3d68d36")
  @@index([provider_id], map: "IDX_ea94f42b6c88e9191c3649d752")
  @@index([order_id], map: "IDX_f5221735ace059250daac9d980")
}

model payment_provider {
  id                       String                     @id(map: "PK_ea94f42b6c88e9191c3649d7522") @db.VarChar
  is_installed             Boolean                    @default(true)
  region_payment_providers region_payment_providers[]
}

model payment_session {
  id              String                      @id(map: "PK_a1a91b20f7f3b1e5afb5485cbcd") @db.VarChar
  cart_id         String                      @db.VarChar
  provider_id     String                      @db.VarChar
  is_selected     Boolean?
  status          payment_session_status_enum
  data            Json
  created_at      DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at      DateTime                    @default(now()) @db.Timestamptz(6)
  idempotency_key String?                     @db.VarChar
  cart            cart                        @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d25ba0787e1510ddc5d442ebcfa")

  @@unique([cart_id, is_selected], map: "OneSelected")
  @@unique([cart_id, provider_id], map: "UniqPaymentSessionCartIdProviderId")
  @@index([provider_id], map: "IDX_d18ad72f2fb7c87f075825b6f8")
  @@index([cart_id], map: "IDX_d25ba0787e1510ddc5d442ebcf")
}

model price_list {
  id                         String                       @id(map: "PK_52ea7826468b1c889cb2c28df03") @db.VarChar
  name                       String                       @db.VarChar
  description                String                       @db.VarChar
  type                       price_list_type_enum         @default(sale)
  status                     price_list_status_enum       @default(draft)
  starts_at                  DateTime?                    @db.Timestamptz(6)
  ends_at                    DateTime?                    @db.Timestamptz(6)
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  deleted_at                 DateTime?                    @db.Timestamptz(6)
  money_amount               money_amount[]
  price_list_customer_groups price_list_customer_groups[]
}

model price_list_customer_groups {
  price_list_id     String         @db.VarChar
  customer_group_id String         @db.VarChar
  price_list        price_list     @relation(fields: [price_list_id], references: [id], onDelete: Cascade, map: "FK_52875734e9dd69064f0041f4d92")
  customer_group    customer_group @relation(fields: [customer_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c5516f550433c9b1c2630d787a7")

  @@id([price_list_id, customer_group_id], map: "PK_1afcbe15cc8782dc80c05707df9")
  @@index([price_list_id], map: "IDX_52875734e9dd69064f0041f4d9")
  @@index([customer_group_id], map: "IDX_c5516f550433c9b1c2630d787a")
}

model product {
  id                         String                       @id(map: "PK_bebc9158e480b949565b4dc7a82") @db.VarChar
  title                      String                       @db.VarChar
  subtitle                   String?                      @db.VarChar
  description                String?                      @db.VarChar
  handle                     String?                      @db.VarChar
  is_giftcard                Boolean                      @default(false)
  thumbnail                  String?                      @db.VarChar
  profile_id                 String                       @db.VarChar
  weight                     Int?
  length                     Int?
  height                     Int?
  width                      Int?
  hs_code                    String?                      @db.VarChar
  origin_country             String?                      @db.VarChar
  mid_code                   String?                      @db.VarChar
  material                   String?                      @db.VarChar
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  deleted_at                 DateTime?                    @db.Timestamptz(6)
  metadata                   Json?
  collection_id              String?                      @db.VarChar
  type_id                    String?                      @db.VarChar
  discountable               Boolean                      @default(true)
  status                     product_status_enum          @default(draft)
  external_id                String?                      @db.VarChar
  product_collection         product_collection?          @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_49d419fc77d3aed46c835c558ac")
  shipping_profile           shipping_profile             @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80823b7ae866dc5acae2dac6d2c")
  product_type               product_type?                @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e0843930fbb8854fe36ca39dae1")
  discount_condition_product discount_condition_product[]
  discount_rule_products     discount_rule_products[]
  product_images             product_images[]
  product_option             product_option[]
  product_tags               product_tags[]
  product_tax_rate           product_tax_rate[]
  product_variant            product_variant[]

  @@index([profile_id], map: "IDX_80823b7ae866dc5acae2dac6d2")
}

model product_collection {
  id                                    String                                  @id(map: "PK_49d419fc77d3aed46c835c558ac") @db.VarChar
  title                                 String                                  @db.VarChar
  handle                                String?                                 @db.VarChar
  created_at                            DateTime                                @default(now()) @db.Timestamptz(6)
  updated_at                            DateTime                                @default(now()) @db.Timestamptz(6)
  deleted_at                            DateTime?                               @db.Timestamptz(6)
  metadata                              Json?
  discount_condition_product_collection discount_condition_product_collection[]
  product                               product[]
}

model product_images {
  product_id String  @db.VarChar
  image_id   String  @db.VarChar
  image      image   @relation(fields: [image_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2212515ba306c79f42c46a99db7")
  product    product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4f166bb8c2bfcef2498d97b4068")

  @@id([product_id, image_id], map: "PK_10de97980da2e939c4c0e8423f2")
  @@index([image_id], map: "IDX_2212515ba306c79f42c46a99db")
  @@index([product_id], map: "IDX_4f166bb8c2bfcef2498d97b406")
}

model product_option {
  id                   String                 @id(map: "PK_4cf3c467e9bc764bdd32c4cd938") @db.VarChar
  title                String                 @db.VarChar
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  metadata             Json?
  product_id           String?                @db.VarChar
  product              product?               @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e634fca34f6b594b87fdbee95f6")
  product_option_value product_option_value[]
}

model product_option_value {
  id              String          @id(map: "PK_2ab71ed3b21be5800905c621535") @db.VarChar
  value           String          @db.VarChar
  option_id       String          @db.VarChar
  variant_id      String          @db.VarChar
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  updated_at      DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?       @db.Timestamptz(6)
  metadata        Json?
  product_variant product_variant @relation(fields: [variant_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7234ed737ff4eb1b6ae6e6d7b01")
  product_option  product_option  @relation(fields: [option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cdf4388f294b30a25c627d69fe9")

  @@index([variant_id], map: "IDX_7234ed737ff4eb1b6ae6e6d7b0")
  @@index([option_id], map: "IDX_cdf4388f294b30a25c627d69fe")
}

model product_tag {
  id                             String                           @id(map: "PK_1439455c6528caa94fcc8564fda") @db.VarChar
  value                          String                           @db.VarChar
  created_at                     DateTime                         @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime                         @default(now()) @db.Timestamptz(6)
  deleted_at                     DateTime?                        @db.Timestamptz(6)
  metadata                       Json?
  discount_condition_product_tag discount_condition_product_tag[]
  product_tags                   product_tags[]
}

model product_tags {
  product_id     String      @db.VarChar
  product_tag_id String      @db.VarChar
  product_tag    product_tag @relation(fields: [product_tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_21683a063fe82dafdf681ecc9c4")
  product        product     @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5b0c6fc53c574299ecc7f9ee22e")

  @@id([product_id, product_tag_id], map: "PK_1cf5c9537e7198df494b71b993f")
  @@index([product_tag_id], map: "IDX_21683a063fe82dafdf681ecc9c")
  @@index([product_id], map: "IDX_5b0c6fc53c574299ecc7f9ee22")
}

model product_tax_rate {
  product_id String   @db.VarChar
  rate_id    String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  metadata   Json?
  product    product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1d04aebeabb6a89f87e536a124d")
  tax_rate   tax_rate @relation(fields: [rate_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2484cf14c437a04586b07e7dddb")

  @@id([product_id, rate_id], map: "PK_326257ce468df46cd5c8c5922e9")
  @@index([product_id], map: "IDX_1d04aebeabb6a89f87e536a124")
  @@index([rate_id], map: "IDX_2484cf14c437a04586b07e7ddd")
}

model product_type {
  id                              String                            @id(map: "PK_e0843930fbb8854fe36ca39dae1") @db.VarChar
  value                           String                            @db.VarChar
  created_at                      DateTime                          @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime                          @default(now()) @db.Timestamptz(6)
  deleted_at                      DateTime?                         @db.Timestamptz(6)
  metadata                        Json?
  discount_condition_product_type discount_condition_product_type[]
  product                         product[]
  product_type_tax_rate           product_type_tax_rate[]
}

model product_type_tax_rate {
  product_type_id String       @db.VarChar
  rate_id         String       @db.VarChar
  created_at      DateTime     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime     @default(now()) @db.Timestamptz(6)
  metadata        Json?
  product_type    product_type @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_25a3138bb236f63d9bb6c8ff111")
  tax_rate        tax_rate     @relation(fields: [rate_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ece65a774192b34253abc4cd672")

  @@id([product_type_id, rate_id], map: "PK_ddc9242de1d99bc7674969289f0")
  @@index([product_type_id], map: "IDX_25a3138bb236f63d9bb6c8ff11")
  @@index([rate_id], map: "IDX_ece65a774192b34253abc4cd67")
}

model product_variant {
  id                   String                 @id(map: "PK_1ab69c9935c61f7c70791ae0a9f") @db.VarChar
  title                String                 @db.VarChar
  product_id           String                 @db.VarChar
  sku                  String?                @db.VarChar
  barcode              String?                @db.VarChar
  ean                  String?                @db.VarChar
  upc                  String?                @db.VarChar
  inventory_quantity   Int
  allow_backorder      Boolean                @default(false)
  manage_inventory     Boolean                @default(true)
  hs_code              String?                @db.VarChar
  origin_country       String?                @db.VarChar
  mid_code             String?                @db.VarChar
  material             String?                @db.VarChar
  weight               Int?
  length               Int?
  height               Int?
  width                Int?
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  metadata             Json?
  variant_rank         Int?                   @default(0)
  product              product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ca67dd080aac5ecf99609960cd2")
  claim_item           claim_item[]
  line_item            line_item[]
  money_amount         money_amount[]
  product_option_value product_option_value[]

  @@index([product_id], map: "IDX_ca67dd080aac5ecf99609960cd")
}

model refund {
  id              String             @id(map: "PK_f1cefa2e60d99b206c46c1116e5") @db.VarChar
  order_id        String             @db.VarChar
  amount          Int
  note            String?            @db.VarChar
  reason          refund_reason_enum
  created_at      DateTime           @default(now()) @db.Timestamptz(6)
  updated_at      DateTime           @default(now()) @db.Timestamptz(6)
  metadata        Json?
  idempotency_key String?            @db.VarChar
  order           order              @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_eec9d9af4ca098e19ea6b499eaa")

  @@index([order_id], map: "IDX_eec9d9af4ca098e19ea6b499ea")
}

model region {
  id                           String                         @id(map: "PK_5f48ffc3af96bc486f5f3f3a6da") @db.VarChar
  name                         String                         @db.VarChar
  currency_code                String                         @db.VarChar
  tax_rate                     Float                          @db.Real
  tax_code                     String?                        @db.VarChar
  created_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  deleted_at                   DateTime?                      @db.Timestamptz(6)
  metadata                     Json?
  gift_cards_taxable           Boolean                        @default(true)
  automatic_taxes              Boolean                        @default(true)
  tax_provider_id              String?                        @db.VarChar
  currency                     currency                       @relation(fields: [currency_code], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "FK_3bdd5896ec93be2f1c62a3309a5")
  tax_provider                 tax_provider?                  @relation(fields: [tax_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_91f88052197680f9790272aaf5b")
  cart                         cart[]
  country                      country[]
  discount_regions             discount_regions[]
  gift_card                    gift_card[]
  money_amount                 money_amount[]
  order                        order[]
  region_fulfillment_providers region_fulfillment_providers[]
  region_payment_providers     region_payment_providers[]
  shipping_option              shipping_option[]
  tax_rate_regionTotax_rate    tax_rate[]
}

model region_fulfillment_providers {
  region_id            String               @db.VarChar
  provider_id          String               @db.VarChar
  fulfillment_provider fulfillment_provider @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_37f361c38a18d12a3fa3158d0cf")
  region               region               @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c556e14eff4d6f03db593df955e")

  @@id([region_id, provider_id], map: "PK_5b7d928a1fb50d6803868cfab3a")
  @@index([provider_id], map: "IDX_37f361c38a18d12a3fa3158d0c")
  @@index([region_id], map: "IDX_c556e14eff4d6f03db593df955")
}

model region_payment_providers {
  region_id        String           @db.VarChar
  provider_id      String           @db.VarChar
  payment_provider payment_provider @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3a6947180aeec283cd92c59ebb0")
  region           region           @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8aaa78ba90d3802edac317df869")

  @@id([region_id, provider_id], map: "PK_9fa1e69914d3dd752de6b1da407")
  @@index([provider_id], map: "IDX_3a6947180aeec283cd92c59ebb")
  @@index([region_id], map: "IDX_8aaa78ba90d3802edac317df86")
}

/// This model has been renamed to 'Renamedreturn' during introspection, because the original name 'return' is reserved.
model Renamedreturn {
  id              String             @id(map: "PK_c8ad68d13e76d75d803b5aeebc4") @db.VarChar
  status          return_status_enum @default(requested)
  swap_id         String?            @unique(map: "REL_bad82d7bff2b08b87094bfac3d") @db.VarChar
  order_id        String?            @db.VarChar
  shipping_data   Json?
  refund_amount   Int
  received_at     DateTime?          @db.Timestamptz(6)
  created_at      DateTime           @default(now()) @db.Timestamptz(6)
  updated_at      DateTime           @default(now()) @db.Timestamptz(6)
  metadata        Json?
  idempotency_key String?            @db.VarChar
  claim_order_id  String?            @unique(map: "UQ_71773d56eb2bacb922bc3283398") @db.VarChar
  no_notification Boolean?
  claim_order     claim_order?       @relation("claim_orderToreturn", fields: [claim_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_71773d56eb2bacb922bc3283398")
  swap            swap?              @relation("returnToswap", fields: [swap_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bad82d7bff2b08b87094bfac3d6")
  order           order?             @relation("orderToreturn", fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d4bd17f918fc6c332b74a368c36")
  return_item     return_item[]      @relation("returnToreturn_item")
  shipping_method shipping_method?   @relation("returnToshipping_method")

  @@index([claim_order_id], map: "IDX_71773d56eb2bacb922bc328339")
  @@index([swap_id], map: "IDX_bad82d7bff2b08b87094bfac3d")
  @@index([order_id], map: "IDX_d4bd17f918fc6c332b74a368c3")
  @@map("return")
}

model return_item {
  return_id          String         @db.VarChar
  item_id            String         @db.VarChar
  quantity           Int
  is_requested       Boolean        @default(true)
  requested_quantity Int?
  received_quantity  Int?
  metadata           Json?
  reason_id          String?        @db.VarChar
  note               String?        @db.VarChar
  return             Renamedreturn  @relation("returnToreturn_item", fields: [return_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7edab75b4fc88ea6d4f2574f087")
  line_item          line_item      @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_87774591f44564effd8039d7162")
  return_reason      return_reason? @relation(fields: [reason_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d742532378a65022e7ceb328828")

  @@id([return_id, item_id], map: "PK_46409dc1dd5f38509b9000c3069")
}

model return_reason {
  id                      String          @id(map: "PK_95fd1172973165790903e65660a") @db.VarChar
  value                   String          @unique(map: "IDX_00605f9d662c06b81c1b60ce24") @db.VarChar
  label                   String          @db.VarChar
  description             String?         @db.VarChar
  created_at              DateTime        @default(now()) @db.Timestamptz(6)
  updated_at              DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at              DateTime?       @db.Timestamptz(6)
  metadata                Json?
  parent_return_reason_id String?         @db.VarChar
  return_reason           return_reason?  @relation("return_reasonToreturn_reason", fields: [parent_return_reason_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2250c5d9e975987ab212f61a657")
  return_item             return_item[]
  other_return_reason     return_reason[] @relation("return_reasonToreturn_reason")
}

model shipping_method {
  id                       String                     @id(map: "PK_b9b0adfad3c6b99229c1e7d4865") @db.VarChar
  shipping_option_id       String                     @db.VarChar
  order_id                 String?                    @db.VarChar
  cart_id                  String?                    @db.VarChar
  swap_id                  String?                    @db.VarChar
  return_id                String?                    @unique(map: "REL_1d9ad62038998c3a85c77a53cf") @db.VarChar
  price                    Int
  data                     Json
  claim_order_id           String?                    @db.VarChar
  return                   Renamedreturn?             @relation("returnToshipping_method", fields: [return_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1d9ad62038998c3a85c77a53cfb")
  order                    order?                     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5267705a43d547e232535b656c2")
  claim_order              claim_order?               @relation(fields: [claim_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d783a66d1c91c0858752c933e68")
  cart                     cart?                      @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d92993a7d554d84571f4eea1d13")
  swap                     swap?                      @relation(fields: [swap_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fb94fa8d5ca940daa2a58139f86")
  shipping_option          shipping_option            @relation(fields: [shipping_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fc963e94854bff2714ca84cd193")
  shipping_method_tax_line shipping_method_tax_line[]

  @@index([return_id], map: "IDX_1d9ad62038998c3a85c77a53cf")
  @@index([order_id], map: "IDX_5267705a43d547e232535b656c")
  @@index([claim_order_id], map: "IDX_d783a66d1c91c0858752c933e6")
  @@index([cart_id], map: "IDX_d92993a7d554d84571f4eea1d1")
  @@index([swap_id], map: "IDX_fb94fa8d5ca940daa2a58139f8")
  @@index([shipping_option_id], map: "IDX_fc963e94854bff2714ca84cd19")
}

model shipping_method_tax_line {
  id                 String          @id(map: "PK_54c94f5908aacbd51cf0a73edb1") @db.VarChar
  rate               Float           @db.Real
  name               String          @db.VarChar
  code               String?         @db.VarChar
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @db.Timestamptz(6)
  metadata           Json?
  shipping_method_id String          @db.VarChar
  shipping_method    shipping_method @relation(fields: [shipping_method_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_926ca9f29014af8091722dede08")

  @@unique([shipping_method_id, code], map: "UQ_cd147fca71e50bc954139fa3104")
  @@index([shipping_method_id], map: "IDX_926ca9f29014af8091722dede0")
}

model shipping_option {
  id                          String                          @id(map: "PK_2e56fddaa65f3a26d402e5d786e") @db.VarChar
  name                        String                          @db.VarChar
  region_id                   String                          @db.VarChar
  profile_id                  String                          @db.VarChar
  provider_id                 String                          @db.VarChar
  price_type                  shipping_option_price_type_enum
  amount                      Int?
  is_return                   Boolean                         @default(false)
  data                        Json
  created_at                  DateTime                        @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime                        @default(now()) @db.Timestamptz(6)
  deleted_at                  DateTime?                       @db.Timestamptz(6)
  metadata                    Json?
  admin_only                  Boolean                         @default(false)
  region                      region                          @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5c58105f1752fca0f4ce69f4663")
  fulfillment_provider        fulfillment_provider            @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a0e206bfaed3cb63c1860917347")
  shipping_profile            shipping_profile                @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c951439af4c98bf2bd7fb8726cd")
  custom_shipping_option      custom_shipping_option[]
  shipping_method             shipping_method[]
  shipping_option_requirement shipping_option_requirement[]
  shipping_tax_rate           shipping_tax_rate[]

  @@index([region_id], map: "IDX_5c58105f1752fca0f4ce69f466")
  @@index([provider_id], map: "IDX_a0e206bfaed3cb63c186091734")
  @@index([profile_id], map: "IDX_c951439af4c98bf2bd7fb8726c")
}

model shipping_option_requirement {
  id                 String                                @id(map: "PK_a0ff15442606d9f783602cb23a7") @db.VarChar
  shipping_option_id String                                @db.VarChar
  type               shipping_option_requirement_type_enum
  amount             Int
  deleted_at         DateTime?                             @db.Timestamptz(6)
  shipping_option    shipping_option                       @relation(fields: [shipping_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_012a62ba743e427b5ebe9dee18e")

  @@index([shipping_option_id], map: "IDX_012a62ba743e427b5ebe9dee18")
}

model shipping_profile {
  id              String                     @id(map: "PK_c8120e4543a5a3a121f2968a1ec") @db.VarChar
  name            String                     @db.VarChar
  type            shipping_profile_type_enum
  created_at      DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?                  @db.Timestamptz(6)
  metadata        Json?
  product         product[]
  shipping_option shipping_option[]
}

model shipping_tax_rate {
  shipping_option_id String          @db.VarChar
  rate_id            String          @db.VarChar
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @db.Timestamptz(6)
  metadata           Json?
  tax_rate           tax_rate        @relation(fields: [rate_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_346e0016cf045b9980747747645")
  shipping_option    shipping_option @relation(fields: [shipping_option_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f672727ab020df6c50fb64c1a70")

  @@id([shipping_option_id, rate_id], map: "PK_bcd93b14d7e2695365d383f5eae")
  @@index([rate_id], map: "IDX_346e0016cf045b998074774764")
  @@index([shipping_option_id], map: "IDX_f672727ab020df6c50fb64c1a7")
}

model staged_job {
  id         String @id(map: "PK_9a28fb48c46c5509faf43ac8c8d") @db.VarChar
  event_name String @db.VarChar
  data       Json
}

model store {
  id                    String             @id(map: "PK_f3172007d4de5ae8e7692759d79") @db.VarChar
  name                  String             @default("Medusa Store") @db.VarChar
  default_currency_code String             @default("usd") @db.VarChar
  swap_link_template    String?            @db.VarChar
  created_at            DateTime           @default(now()) @db.Timestamptz(6)
  updated_at            DateTime           @default(now()) @db.Timestamptz(6)
  metadata              Json?
  payment_link_template String?            @db.VarChar
  invite_link_template  String?            @db.VarChar
  currency              currency           @relation(fields: [default_currency_code], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "FK_55beebaa09e947cccca554af222")
  store_currencies      store_currencies[]
}

model store_currencies {
  store_id      String   @db.VarChar
  currency_code String   @db.VarChar
  currency      currency @relation(fields: [currency_code], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "FK_82a6bbb0b527c20a0002ddcbd60")
  store         store    @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b4f4b63d1736689b7008980394c")

  @@id([store_id, currency_code], map: "PK_0f2bff3bccc785c320a4df836de")
  @@index([currency_code], map: "IDX_82a6bbb0b527c20a0002ddcbd6")
  @@index([store_id], map: "IDX_b4f4b63d1736689b7008980394")
}

model swap {
  id                  String                       @id(map: "PK_4a10d0f359339acef77e7f986d9") @db.VarChar
  fulfillment_status  swap_fulfillment_status_enum
  payment_status      swap_payment_status_enum
  order_id            String                       @db.VarChar
  difference_due      Int?
  shipping_address_id String?                      @db.VarChar
  cart_id             String?                      @unique(map: "REL_402e8182bc553e082f6380020b") @db.VarChar
  confirmed_at        DateTime?                    @db.Timestamptz(6)
  created_at          DateTime                     @default(now()) @db.Timestamptz(6)
  updated_at          DateTime                     @default(now()) @db.Timestamptz(6)
  deleted_at          DateTime?                    @db.Timestamptz(6)
  metadata            Json?
  idempotency_key     String?                      @db.VarChar
  no_notification     Boolean?
  canceled_at         DateTime?                    @db.Timestamptz(6)
  allow_backorder     Boolean                      @default(false)
  cart                cart?                        @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_402e8182bc553e082f6380020b4")
  order               order                        @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_52dd74e8c989aa5665ad2852b8b")
  address             address?                     @relation(fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f5189d38b3d3bd496618bf54c57")
  fulfillment         fulfillment[]
  line_item           line_item[]
  payment             payment?
  return              Renamedreturn?               @relation("returnToswap")
  shipping_method     shipping_method[]

  @@index([order_id], map: "IDX_52dd74e8c989aa5665ad2852b8")
}

model tax_provider {
  id           String   @id(map: "PK_b198bf82ba6a317c11763d99b99") @db.VarChar
  is_installed Boolean  @default(true)
  region       region[]
}

model tax_rate {
  id                    String                  @id(map: "PK_23b71b53f650c0b39e99ccef4fd") @db.VarChar
  rate                  Float?                  @db.Real
  code                  String?                 @db.VarChar
  name                  String                  @db.VarChar
  region_id             String                  @db.VarChar
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                @default(now()) @db.Timestamptz(6)
  metadata              Json?
  region                region                  @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b95a1e03b051993d208366cb960")
  product_tax_rate      product_tax_rate[]
  product_type_tax_rate product_type_tax_rate[]
  shipping_tax_rate     shipping_tax_rate[]
}

model tracking_link {
  id              String      @id(map: "PK_fcfd77feb9012ec2126d7c0bfb6") @db.VarChar
  url             String?     @db.VarChar
  tracking_number String      @db.VarChar
  fulfillment_id  String      @db.VarChar
  created_at      DateTime    @default(now()) @db.Timestamptz(6)
  updated_at      DateTime    @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?   @db.Timestamptz(6)
  metadata        Json?
  idempotency_key String?     @db.VarChar
  fulfillment     fulfillment @relation(fields: [fulfillment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_471e9e4c96e02ba209a307db32b")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model typeorm_metadata {
  type     String  @db.VarChar
  database String? @db.VarChar
  schema   String? @db.VarChar
  table    String? @db.VarChar
  name     String? @db.VarChar
  value    String?

  @@ignore
}

model user {
  id            String          @id(map: "PK_cace4a159ff9f2512dd42373760") @db.VarChar
  email         String          @db.VarChar
  first_name    String?         @db.VarChar
  last_name     String?         @db.VarChar
  password_hash String?         @db.VarChar
  api_token     String?         @db.VarChar
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?       @db.Timestamptz(6)
  metadata      Json?
  role          user_role_enum? @default(member)
  batch_job     batch_job[]
}

enum cart_type_enum {
  default
  swap
  draft_order
  payment_link
  claim
}

enum claim_item_reason_enum {
  missing_item
  wrong_item
  production_failure
  other
}

enum claim_order_fulfillment_status_enum {
  not_fulfilled
  partially_fulfilled
  fulfilled
  partially_shipped
  shipped
  partially_returned
  returned
  canceled
  requires_action
}

enum claim_order_payment_status_enum {
  na
  not_refunded
  refunded
}

enum claim_order_type_enum {
  refund
  replace
}

enum discount_condition_operator_enum {
  in
  not_in
}

enum discount_condition_type_enum {
  products
  product_types
  product_collections
  product_tags
  customer_groups
}

enum discount_rule_allocation_enum {
  total
  item
}

enum discount_rule_type_enum {
  fixed
  percentage
  free_shipping
}

enum draft_order_status_enum {
  open
  completed
}

enum invite_role_enum {
  admin
  member
  developer
}

enum order_fulfillment_status_enum {
  not_fulfilled
  partially_fulfilled
  fulfilled
  partially_shipped
  shipped
  partially_returned
  returned
  canceled
  requires_action
}

enum order_payment_status_enum {
  not_paid
  awaiting
  captured
  partially_refunded
  refunded
  canceled
  requires_action
}

enum order_status_enum {
  pending
  completed
  archived
  canceled
  requires_action
}

enum payment_session_status_enum {
  authorized
  pending
  requires_more
  error
  canceled
}

enum price_list_status_enum {
  active
  draft
}

enum price_list_type_enum {
  sale
  override
}

enum product_status_enum {
  draft
  proposed
  published
  rejected
}

enum refund_reason_enum {
  discount
  return
  swap
  claim
  other
}

enum return_status_enum {
  requested
  received
  requires_action
  canceled
}

enum shipping_option_price_type_enum {
  flat_rate
  calculated
}

enum shipping_option_requirement_type_enum {
  min_subtotal
  max_subtotal
}

enum shipping_profile_type_enum {
  default
  gift_card
  custom
}

enum swap_fulfillment_status_enum {
  not_fulfilled
  fulfilled
  shipped
  partially_shipped
  canceled
  requires_action
}

enum swap_payment_status_enum {
  not_paid
  awaiting
  captured
  confirmed
  canceled
  difference_refunded
  partially_refunded
  refunded
  requires_action
}

enum user_role_enum {
  admin
  member
  developer
}
